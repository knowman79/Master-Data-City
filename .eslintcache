[{"D:\\79\\Knowledge Management\\Project\\ReactJs\\km-react\\src\\index.js":"1","D:\\79\\Knowledge Management\\Project\\ReactJs\\km-react\\src\\App.js":"2","D:\\79\\Knowledge Management\\Project\\ReactJs\\km-react\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":4150,"mtime":1612240793687,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"jlccoa",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\79\\Knowledge Management\\Project\\ReactJs\\km-react\\src\\index.js",[],["17","18"],"D:\\79\\Knowledge Management\\Project\\ReactJs\\km-react\\src\\App.js",["19","20"],"import './App.css';\nimport React from 'react';\nimport { Button } from 'antd';\nimport { Layout, Row, Col, Input, Table, Tag, Space } from 'antd';\nimport {\n  DeploymentUnitOutlined,\n  AudioOutlined,\n  QuestionCircleOutlined,\n  CaretDownOutlined,\n  CommentOutlined,\n  NotificationOutlined\n} from '@ant-design/icons';\nconst { Header, Content } = Layout;\nconst { Search } = Input;\nconst onSearch = value => console.log(value);\nconst suffix = (\n  <AudioOutlined\n    style={{\n      fontSize: 16,\n      color: '#1890ff',\n    }}\n  />\n);\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'City',\n    dataIndex: 'city',\n    key: 'city',\n  },\n  {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tags => (\n      <>\n        {tags.map(tag => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <Space size=\"middle\">\n        <a>Invite {record.name}</a>\n      </Space>\n    ),\n  },\n];\nconst data = [\n  {\n    key: '1',\n    name: 'Arima',\n    age: 30,\n    city: 'New York',\n    tags: ['nice', 'teacher'],\n  },\n  {\n    key: '2',\n    name: 'Touka',\n    age: 22,\n    city: 'London',\n    tags: ['Good', 'developer'],\n  },\n  {\n    key: '3',\n    name: 'Kaneki',\n    age: 23,\n    city: 'Madrid',\n    tags: ['cool', 'developer'],\n  },\n  {\n    key: '4',\n    name: 'Hinami',\n    age: 25,\n    city: 'Sidney',\n    tags: ['loser'],\n  },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header>\n          <Row>\n            <Col span={1}>\n              <DeploymentUnitOutlined\n              style={{\n                fontSize: 30,\n                color: '#ffffff',\n              }}/>\n            </Col>\n            <Col span={1}>\n              <QuestionCircleOutlined\n              style={{\n                fontSize: 24,\n                color: '#ffffff',\n                marginLeft: 969\n              }}/>\n            </Col>\n            <Col span={1}\n            style={{\n              fontSize: 16,\n              color: '#ffffff',\n              marginTop: -4,\n              marginLeft: 949\n            }}>\n              Cheese\n            </Col>\n            <Col span={1}>\n              <CaretDownOutlined\n              style={{\n                fontSize: 18,\n                color: '#ffffff',\n              }}/>\n            </Col>\n            <Col span={1}>\n              <CommentOutlined\n              style={{\n                fontSize: 24,\n                color: '#ffffff',\n              }}/>\n            </Col>\n            <Col span={1}>\n              <NotificationOutlined\n              style={{\n                fontSize: 24,\n                color: '#ffffff',\n              }}/>\n            </Col>\n          </Row>\n        </Header>\n          <Row style={{ paddingTop: 5, paddingBottom: 5, background: 'cadetblue' }}>\n            <Col span={2}>Dashboard</Col>\n            <Col span={2}>Monitoring</Col>\n            <Col span={2}>Schedule</Col>\n            <Col span={2}>Master Data</Col>\n          </Row>\n      <Content  style={{ marginTop: 10 }}>\n        <Row style={{ marginLeft: 60 }}>\n          <Col span={1} style={{ marginTop: 5, fontStyle: 'bold' }}>\n            <div>\n              City\n            </div>\n          </Col>\n          <Col span={1}>\n            <Button type=\"primary\">+ Create</Button>\n          </Col>\n          <Col span={22}>\n          <Search\n            placeholder=\"search\"\n            enterButton=\"Search\"\n            suffix={suffix}\n            onSearch={onSearch}\n            style={{ width: 200, marginLeft: 850 }}\n          />\n          </Col>\n        </Row>\n      </Content>\n      <Table columns={columns} dataSource={data} style={{ marginTop: 20, marginLeft: 75, marginRight: 75 }}/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\79\\Knowledge Management\\Project\\ReactJs\\km-react\\src\\reportWebVitals.js",[],["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":29,"column":21,"nodeType":"29","endLine":29,"endColumn":24},{"ruleId":"27","severity":1,"message":"28","line":66,"column":9,"nodeType":"29","endLine":66,"endColumn":12},{"ruleId":"23","replacedBy":"30"},{"ruleId":"25","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["32"],["33"],"no-global-assign","no-unsafe-negation"]